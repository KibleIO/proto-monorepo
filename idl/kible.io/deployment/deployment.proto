syntax = "proto3";

option go_package = "gaia/src/kible.io/gen/deploymentpb";

package kible.deployment;

import "gaia/universal.proto";
import "gaia/locationstore.proto";

// external facing API
service DEPLOYMENT {
	rpc GetServer (GetServerRequest) returns (GetServerResponse) {}
	rpc GetServiceConnection (GetServiceRequest) returns (GetServiceResponse) {}
	rpc CreateServerInstance (CreateServerInstanceRequest) returns (CreateServerInstanceResponse) {}
}

message GetServiceRequest {
	string accountid = 1;
}

message GetServiceResponse {
	string address = 1;
}

message CreateServerInstanceRequest {
	string domain = 2;
	kible.gaia.LocationUUID locationid = 3;
}

message CreateServerInstanceResponse {
	kible.gaia.Empty empty = 1;
}

message GetServerRequest {
	kible.gaia.UUID serverid = 1;
}

message GetServerResponse {
	string domain = 1;
	kible.gaia.LocationUUID locationid = 2;
	int32 activenodes = 3;
	string caddypassword = 4;
	string dockerpassword = 5;
}